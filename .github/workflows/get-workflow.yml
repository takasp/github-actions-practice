name: Get Workflow Number and Completion Time

on:
#  workflow_run:
#    workflows: ["Hadolint"]
#    types:
#      - completed
  push:
    branches: [ "main" ]

jobs:
  get_workflow_info:
    runs-on: ubuntu-latest
    environment: GAS_URL

    steps:
      - name: Get Workflow Number and Completion Time
        uses: actions/github-script@v6
        env:
          DEPLOYMENT_FREQUENCY_URL: ${{ secrets.DEPLOYMENT_FREQUENCY_URL }}
        with:
          script: |

            const workflows = await github.rest.actions.listRepoWorkflows({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            console.log(JSON.stringify(workflows));
            
            const workflow = await github.rest.actions.getWorkflow({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '73424475',
            });
            console.log(JSON.stringify(workflow));
            
            const workflowRuns = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '73424475',
              status: 'completed',
            });
            const runs = workflowRuns.data.workflow_runs.map(workflowRun => ({
              number: workflowRun.run_number,
              released_at: workflowRun.updated_at,
              repository: workflowRun.repository.name,
              author: workflowRun.triggering_actor.login,
            }))
            console.log(JSON.stringify(runs));

            if (runs.length) {
              const url = process.env.DEPLOYMENT_FREQUENCY_URL;
              fetch(url, {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify(runs)
              }).then((response) => {
                console.log(JSON.stringify(response));
              }).catch((error) => {
                console.error(error);
              });
            }


#            const completedAt = new Date(runs.jobs[0].completed_at);
#            console.log(`Workflow completed at: ${completedAt.toISOString()}`);


#            const workflow = await github.rest.actions.getWorkflow({ workflow_id: github.run_id });
#            console.log(`Workflow Number: ${workflow.number}`);
#
#            const runs = await github.actions.listJobsForWorkflowRun({
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              run_id: github.run_id
#            });
