# test
# ref: https://qiita.com/hkusu/items/39eb92dbd4d6db8a14d8
# ref: https://zenn.dev/snowcait/articles/d6bc5eafd8ab75
# ref: https://github.com/actions/github-script
name: Auto assign pull requests

on:
  pull_request:
    types: [opened]


jobs:
  assign:
    name: Set assignees and reviewers
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - name: echo github
        run: echo '${{ toJSON(github.event.pull_request) }}'
      - name: echo github
        run: echo '${{ toJSON(github) }}'
      - name: Set assignees
        uses: actions/github-script@v6
        if: ${{ toJSON(github.event.pull_request.assignees) == '[]' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log("github.actor: ", github.actor);
            console.log("context.payload.pull_request: ", context.payload.pull_request);
            console.log("context.payload.pull_request.user.login:", context.payload.pull_request.user.login);
            const { number: issue_number, user } = context.payload.pull_request;
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              assignees: [user.login]
            });
      - name: Assign Reviewer
        uses: actions/github-script@v6
        if: ${{ toJSON(github.event.pull_request.requested_reviewers) == '[]' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const groups = {
              group1: ['takasp', 'takasp', 'takasp'],
              group2: ['takasp', 'takasp', 'takasp'],
              group3: ['takasp', 'takasp', 'takasp']
            };

            const reviewers = {};
            for (const [group, members] of Object.entries(groups)) {
              const index = Math.floor(Math.random() * members.length);
              reviewers[group] = members[index];
            }
            console.log("reviewers: ", reviewers);

            await github.rest.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              reviewers: Object.values(reviewers)
            });
