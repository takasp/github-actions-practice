# test
# ref: https://qiita.com/hkusu/items/39eb92dbd4d6db8a14d8
# ref: https://zenn.dev/snowcait/articles/d6bc5eafd8ab75
# ref: https://github.com/actions/github-script
name: Auto assign pull requests

on: push
  #pull_request:
  #  types: opened

jobs:
  assign:
    name: Set assignees and reviewers
    runs-on: ubuntu-22.04
    steps:
      - name: echo github
        run: echo '${{ toJSON(github.event.pull_request) }}'
      - name: Set assignees
        env:
          ASSIGNEES: "${{ github.actor }}"
        uses: actions/github-script@v6
        if: ${{ toJSON(github.event.pull_request.assignees) != '[]' }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log("process.env.ASSIGNEE: ", process.env.ASSIGNEE);
            console.log('sssss');
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: 'takasp',
              repo: 'github-actions-practice',
              pull_number: 4,
            });
            console.log(pullRequest.url);
            // console.log(pullRequest);
            // console.log(JSON.stringify(pr));
            // console.log("pr.assignees", pr.assignees);
            console.log("pullRequest.assignees.length:", pullRequest.assignees.length);
            if (pullRequest.assignees.length === 0) {
              
            }
      - name: Read reviewer JSON file
        id: json
        run: echo $(cat .github/workflows/reviewer-assign-groups.json)
        outputs:
          content: ${{ steps.json.outputs.content }}
      - name: Use data in another step
        run: |
          echo "The data is: ${{ steps.json.outputs.content }}"
      - name: Assign Reviewer
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log(`${{ steps.json.outputs.content }}`);
            console.log('sssssss');
            const reviewersData = JSON.parse(`${{ steps.json.outputs.content }}`);
            const prNumber = context.payload.pull_request.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const reviewers = [];
            for (const [groupName, groupData] of Object.entries(reviewersData)) {
              reviewers.push(...groupData.members.slice(0, groupData.count));
            }

            console.log(`Assigning reviewers ${reviewers.join(', ')} to PR ${prNumber}`);
            github.pulls.createReviewRequest({
              owner,
              repo,
              pull_number: prNumber,
              reviewers
            });
